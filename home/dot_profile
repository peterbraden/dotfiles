# nmvim:fdm=marker
export DOTPATH=~/repos/dotfiles

if [ -f ~/.profile.local ]; then
  source ~/.profile.local
fi

# Environment -------------------  {{{
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
export EDITOR=nvim
export VISUAL=nvim
export HISTSIZE=10000
export HISTCONTROL='ignoreboth';
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";


# }}}
# PATH Manipulation ---- {{{
#
export PATH="/usr/local/sbin:/usr/local/bin:/opt/local/bin:/opt/local/sbin:$HOME/.local/bin:$HOME/bin:$PATH"

export PATH=$PATH:/usr/local/go/bin   # Add golang
export PATH=$PATH:./node_modules/.bin # Add nodejs

# Add cargo
if test -e "$HOME/.cargo/bin"; then
  PATH="$HOME/.cargo/bin:$PATH"
  . "$HOME/.cargo/env"
fi

# }}}


# ALIASES ----------------------- {{{
alias vi="nvim -p"
alias vim="nvim -p"
alias rmswp='find ./ -type f -name "\.*sw[klmnop]" -delete && find ./ -type f -name "\.*un~" -delete'
alias motd=$DOTPATH/motd
alias ack=rg
alias s=rg
alias ff='find . | egrep'
alias td='$DOTPATH/scripts/todo-edit.sh'
alias tdl='$DOTPATH/scripts/todo-list.sh'
alias note='$DOTPATH/scripts/notes-edit.sh'
alias diary='$DOTPATH/scripts/diary.sh'
alias imgcat="$DOTPATH/scripts/imgcat.iterm.sh"
alias mg=mv #disable mg editor

alias l="exa" # | ls

# GIT
alias gp='git pull'
alias gd='git diff'
alias gs='git status'
alias gca='git commit -a'
alias gl='git log -p'
alias glg='git log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit'
alias git-cleanup='git branch --merged | grep -v "\*" | xargs -n 1 git branch -d'
alias git-fix-merges='~/repos/dotfiles/scripts/git-fix-merges.sh'
alias gfm='git-fix-merges'

# Shortcuts
alias d='date --rfc-3339=seconds'
alias genpwd="openssl rand -base64 20"

# TMUX
# - supports 256 colors
alias tmux='tmux -2'
alias tmux-start-server='tmux new -d'
# attach or create session - similar to `screen -dR foo`
alias tm='tmux new-session -AD'
alias tml='tmux list-sessions'
alias tmo='$DOTPATH/scripts/open-project.sh'
alias tmk='tmux kill-session -t'


# Docker
alias docker-init='eval "$(docker-machine env)"'
alias docker-cleanup='docker system prune'
alias docker-killall='docker ps -a -q'
alias docker-nuke='docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q) && docker rmi $(docker images -a -q) && docker volume rm $(docker volume ls -f dangling=true -q)' 

# }}}

# Functions ----- {{{
function psgrep() {
EXP=`echo $1 | sed -e 's/^\(.\)/\[\1\]/'`
ps aux | grep $EXP
}

function oldip(){
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
}

extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}


# When in tmux, and the ssh-agent env changes, we need to update it with this
# function.
function fix-ssh-in-tmux() {
  export $(tmux show-environment | grep "^SSH_AUTH_SOCK")
}
# }}} 



# SSH Agent
SSHAGENT=/usr/bin/ssh-agent
SSHAGENTARGS="-s"

if [ -z "$SSH_AUTH_SOCK" -a -x "$SSHAGENT" ]; then
  # Only run ssh agent if not already in a forwarded session
	eval `$SSHAGENT $SSHAGENTARGS`
	trap "kill $SSH_AGENT_PID" 0
else
  # We are in a forwarded session.
  # If we are starting a shell in tmux, then we should refresh the socket
  # This only works for new shells.
  if [ -n "$TMUX" ]; then
    fix-ssh-in-tmux
  fi
fi





export GPG_TTY=$(tty)



# === Environment hackery
export GOOGLE_APPLICATION_CREDENTIALS=/Users/peterbraden/secrets/gcloud.json

