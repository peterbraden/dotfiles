# nmvim:fdm=marker
#
# .profile is executed by login shells as the login shell $SHELL
# But NB. it's not executed by zsh (we need to source it manually in .zprofile)
# Because of this we stick to /bin/sh syntax
#
# .profile is a good place for environment variables
# Depending on $SHELL we want to either source .bashrc or .zshrc so we also get
# the rest of the setup in our login shell too.

export DOTPATH=~/.local/share/chezmoi

if [ -f ~/.profile.local ]; then
  . ~/.profile.local
fi

export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

export EDITOR=nvim
export GIT_EDITOR=nvim
export VISUAL=nvim

export GPG_TTY=$(tty)

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# PATH Manipulation ---- 
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"

export PATH=$PATH:/opt/local/bin:/opt/local/sbin
export PATH=$PATH:/usr/local/bin:/usr/local/sbin

{{- if .golang -}}
export PATH=$PATH:/usr/local/go/bin   # Add golang
{{- end -}}

export PATH=$PATH:./node_modules/.bin # Add nodejs
export PATH=$PATH:/opt/homebrew/bin   # Homebrew

# Pyenv
if command -v pyenv &> /dev/null; then
  # pyenv exists
  export PATH=$(pyenv root)/shims:$PATH $
  eval "$(pyenv init -)"
fi
 
# Add cargo
if test -e "$HOME/.cargo/bin"; then
  export PATH="$HOME/.cargo/bin:$PATH"
  . "$HOME/.cargo/env"
fi

# -- SSH Agent --
if [ -z "$SSH_AUTH_SOCK" -a -x "/usr/bin/ssh-agent" ]; then
  # Only run ssh agent if not already in a forwarded session
	eval `ssh-agent -s`
  ssh-add $HOME/.ssh/id_rsa
	trap "kill $SSH_AGENT_PID" 0
else
  # We are in a forwarded session.
  # If we are starting a shell in tmux, then we should refresh the socket
  # This only works for new shells.
  if [ -n "$TMUX" ]; then
    export $(tmux show-environment | grep "^SSH_AUTH_SOCK")
  fi
fi

if [ "$SHELL" == "/bin/zsh" ]; then
  source ~/.zshrc
else
  source ~/.bashrc
fi
